{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _pick from \"lodash/pick\";\nimport _includes from \"lodash/includes\";\nimport _reduce from \"lodash/reduce\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { isValidElement } from 'react';\nimport { AutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MountNode from '../../addons/MountNode';\nimport Portal from '../../addons/Portal';\nimport ModalHeader from './ModalHeader';\nimport ModalContent from './ModalContent';\nimport ModalActions from './ModalActions';\nimport ModalDescription from './ModalDescription';\nimport Ref from '../../addons/Ref';\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\n\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getMountNode\", function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleActionsOverrides\", function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClose\", function (e) {\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.trySetState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDocumentClick\", function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref, e)) return;\n\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.trySetState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleIconOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleOpen\", function (e) {\n      _invoke(_this.props, 'onOpen', e, _this.props);\n\n      _this.trySetState({\n        open: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handlePortalMount\", function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handlePortalUnmount\", function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRef\", function (c) {\n      return _this.ref = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDimmerRef\", function (c) {\n      return _this.dimmerRef = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setDimmerNodeStyle\", function () {\n      if (_this.dimmerRef) {\n        _this.dimmerRef.style.setProperty('display', 'flex', 'important');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPositionAndClassNames\", function () {\n      var dimmer = _this.props.dimmer;\n      var classes;\n\n      if (dimmer) {\n        classes = 'dimmable dimmed';\n\n        if (dimmer === 'blurring') {\n          classes += ' blurring';\n        }\n      }\n\n      var newState = {};\n\n      if (_this.ref) {\n        var _this$ref$getBounding = _this.ref.getBoundingClientRect(),\n            height = _this$ref$getBounding.height; // Leaving the old calculation here since we may need it as an older browser fallback\n        // SEE: https://github.com/Semantic-Org/Semantic-UI/issues/6185#issuecomment-376725956\n        // const marginTop = -Math.round(height / 2)\n\n\n        var marginTop = null;\n        var scrolling = height > window.innerHeight;\n\n        if (_this.state.marginTop !== marginTop) {\n          newState.marginTop = marginTop;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n\n        if (scrolling) classes += ' scrolling';\n      }\n\n      if (_this.state.mountClasses !== classes) newState.mountClasses = classes;\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n\n      _this.setDimmerNodeStyle();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderContent\", function (rest) {\n      var _this$props = _this.props,\n          actions = _this$props.actions,\n          basic = _this$props.basic,\n          children = _this$props.children,\n          className = _this$props.className,\n          closeIcon = _this$props.closeIcon,\n          content = _this$props.content,\n          header = _this$props.header,\n          mountNode = _this$props.mountNode,\n          size = _this$props.size,\n          style = _this$props.style;\n      var _this$state = _this.state,\n          marginTop = _this$state.marginTop,\n          mountClasses = _this$state.mountClasses,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        // TODO: remove when ref with \"as\" is resolved: PR #2306\n        return React.createElement(Ref, {\n          innerRef: _this.handleRef\n        }, React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          style: _objectSpread({\n            marginTop: marginTop\n          }, style)\n        }), React.createElement(MountNode, {\n          className: mountClasses,\n          node: mountNode\n        }), closeIconJSX, children));\n      } // TODO: remove when ref with \"as\" is resolved: PR #2306\n\n\n      return React.createElement(Ref, {\n        innerRef: _this.handleRef\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _objectSpread({\n          marginTop: marginTop\n        }, style)\n      }), React.createElement(MountNode, {\n        className: mountClasses,\n        node: mountNode\n      }), closeIconJSX, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })));\n    });\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handlePortalUnmount();\n    } // Do not access document when server side rendering\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      var _this$props2 = this.props,\n          centered = _this$props2.centered,\n          closeOnDocumentClick = _this$props2.closeOnDocumentClick,\n          dimmer = _this$props2.dimmer,\n          eventPool = _this$props2.eventPool,\n          trigger = _this$props2.trigger;\n      var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n      if (!isBrowser()) {\n        return isValidElement(trigger) ? trigger : null;\n      }\n\n      var unhandled = getUnhandledProps(Modal, this.props);\n      var portalPropNames = Portal.handledProps;\n\n      var rest = _reduce(unhandled, function (acc, val, key) {\n        if (!_includes(portalPropNames, key)) acc[key] = val;\n        return acc;\n      }, {});\n\n      var portalProps = _pick(unhandled, portalPropNames); // wrap dimmer modals\n\n\n      var dimmerClasses = cx('ui', dimmer === 'inverted' && 'inverted', !centered && 'top aligned', 'page modals dimmer transition visible active'); // Heads up!\n      //\n      // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n      // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n      //\n      // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n      // We need the immediate child to be the dimmer to :not() blur the modal itself!\n      // Otherwise, the portal div is also blurred, blurring the modal.\n      //\n      // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n      return React.createElement(Portal, _extends({\n        closeOnDocumentClick: closeOnDocumentClick\n      }, portalProps, {\n        trigger: trigger,\n        eventPool: eventPool,\n        mountNode: mountNode,\n        open: open,\n        onClose: this.handleClose,\n        onMount: this.handlePortalMount,\n        onOpen: this.handleOpen,\n        onUnmount: this.handlePortalUnmount\n      }), React.createElement(\"div\", {\n        className: dimmerClasses,\n        ref: this.handleDimmerRef\n      }, this.renderContent(rest)));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\n_defineProperty(Modal, \"defaultProps\", {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n});\n\n_defineProperty(Modal, \"autoControlledProps\", ['open']);\n\n_defineProperty(Modal, \"Header\", ModalHeader);\n\n_defineProperty(Modal, \"Content\", ModalContent);\n\n_defineProperty(Modal, \"Description\", ModalDescription);\n\n_defineProperty(Modal, \"Actions\", ModalActions);\n\n_defineProperty(Modal, \"handledProps\", [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"]);\n\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOf([true, 'inverted', 'blurring']),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['fullscreen', 'large', 'mini', 'small', 'tiny']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Portal are passed-through\n   * to the wrapping Portal.\n   */\n\n} : {};\nexport default Modal;","map":{"version":3,"sources":["/Users/arielrazon/Desktop/big_coding_projects/in_decisive/client/node_modules/semantic-ui-react/dist/es/modules/Modal/Modal.js"],"names":["_extends","_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_assertThisInitialized","_defineProperty","_pick","_includes","_reduce","_isEmpty","_invoke","cx","PropTypes","React","isValidElement","AutoControlledComponent","Component","childrenUtils","customPropTypes","doesNodeContainClick","eventStack","getElementType","getUnhandledProps","isBrowser","useKeyOnly","Icon","MountNode","Portal","ModalHeader","ModalContent","ModalActions","ModalDescription","Ref","Modal","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","props","mountNode","document","body","predefinedProps","onActionClick","e","actionProps","handleClose","trySetState","open","closeOnDimmerClick","ref","onClick","eventPool","setState","scrolling","setPositionAndClassNames","sub","handleDocumentClick","pool","target","dimmerRef","cancelAnimationFrame","animationRequestId","unsub","c","style","setProperty","dimmer","classes","newState","_this$ref$getBounding","getBoundingClientRect","height","marginTop","window","innerHeight","state","mountClasses","requestAnimationFrame","setDimmerNodeStyle","rest","_this$props","actions","basic","children","className","closeIcon","content","header","size","_this$state","ElementType","closeIconName","closeIconJSX","create","overrideProps","handleIconOverrides","isNil","createElement","innerRef","handleRef","node","autoGenerateKey","handleActionsOverrides","key","value","componentWillUnmount","handlePortalUnmount","render","_this$props2","centered","closeOnDocumentClick","trigger","getMountNode","unhandled","portalPropNames","handledProps","acc","val","portalProps","dimmerClasses","onClose","onMount","handlePortalMount","onOpen","handleOpen","onUnmount","handleDimmerRef","renderContent","propTypes","process","env","NODE_ENV","as","itemShorthand","bool","string","oneOfType","object","defaultOpen","oneOf","any","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _pick from \"lodash/pick\";\nimport _includes from \"lodash/includes\";\nimport _reduce from \"lodash/reduce\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { isValidElement } from 'react';\nimport { AutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MountNode from '../../addons/MountNode';\nimport Portal from '../../addons/Portal';\nimport ModalHeader from './ModalHeader';\nimport ModalContent from './ModalContent';\nimport ModalActions from './ModalActions';\nimport ModalDescription from './ModalDescription';\nimport Ref from '../../addons/Ref';\n\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getMountNode\", function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleActionsOverrides\", function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClose\", function (e) {\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.trySetState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDocumentClick\", function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref, e)) return;\n\n      _invoke(_this.props, 'onClose', e, _this.props);\n\n      _this.trySetState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleIconOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleOpen\", function (e) {\n      _invoke(_this.props, 'onOpen', e, _this.props);\n\n      _this.trySetState({\n        open: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handlePortalMount\", function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handlePortalUnmount\", function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRef\", function (c) {\n      return _this.ref = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDimmerRef\", function (c) {\n      return _this.dimmerRef = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setDimmerNodeStyle\", function () {\n      if (_this.dimmerRef) {\n        _this.dimmerRef.style.setProperty('display', 'flex', 'important');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPositionAndClassNames\", function () {\n      var dimmer = _this.props.dimmer;\n      var classes;\n\n      if (dimmer) {\n        classes = 'dimmable dimmed';\n\n        if (dimmer === 'blurring') {\n          classes += ' blurring';\n        }\n      }\n\n      var newState = {};\n\n      if (_this.ref) {\n        var _this$ref$getBounding = _this.ref.getBoundingClientRect(),\n            height = _this$ref$getBounding.height; // Leaving the old calculation here since we may need it as an older browser fallback\n        // SEE: https://github.com/Semantic-Org/Semantic-UI/issues/6185#issuecomment-376725956\n        // const marginTop = -Math.round(height / 2)\n\n\n        var marginTop = null;\n        var scrolling = height > window.innerHeight;\n\n        if (_this.state.marginTop !== marginTop) {\n          newState.marginTop = marginTop;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n\n        if (scrolling) classes += ' scrolling';\n      }\n\n      if (_this.state.mountClasses !== classes) newState.mountClasses = classes;\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n\n      _this.setDimmerNodeStyle();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderContent\", function (rest) {\n      var _this$props = _this.props,\n          actions = _this$props.actions,\n          basic = _this$props.basic,\n          children = _this$props.children,\n          className = _this$props.className,\n          closeIcon = _this$props.closeIcon,\n          content = _this$props.content,\n          header = _this$props.header,\n          mountNode = _this$props.mountNode,\n          size = _this$props.size,\n          style = _this$props.style;\n      var _this$state = _this.state,\n          marginTop = _this$state.marginTop,\n          mountClasses = _this$state.mountClasses,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        // TODO: remove when ref with \"as\" is resolved: PR #2306\n        return React.createElement(Ref, {\n          innerRef: _this.handleRef\n        }, React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          style: _objectSpread({\n            marginTop: marginTop\n          }, style)\n        }), React.createElement(MountNode, {\n          className: mountClasses,\n          node: mountNode\n        }), closeIconJSX, children));\n      } // TODO: remove when ref with \"as\" is resolved: PR #2306\n\n\n      return React.createElement(Ref, {\n        innerRef: _this.handleRef\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _objectSpread({\n          marginTop: marginTop\n        }, style)\n      }), React.createElement(MountNode, {\n        className: mountClasses,\n        node: mountNode\n      }), closeIconJSX, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })));\n    });\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handlePortalUnmount();\n    } // Do not access document when server side rendering\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      var _this$props2 = this.props,\n          centered = _this$props2.centered,\n          closeOnDocumentClick = _this$props2.closeOnDocumentClick,\n          dimmer = _this$props2.dimmer,\n          eventPool = _this$props2.eventPool,\n          trigger = _this$props2.trigger;\n      var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n      if (!isBrowser()) {\n        return isValidElement(trigger) ? trigger : null;\n      }\n\n      var unhandled = getUnhandledProps(Modal, this.props);\n      var portalPropNames = Portal.handledProps;\n\n      var rest = _reduce(unhandled, function (acc, val, key) {\n        if (!_includes(portalPropNames, key)) acc[key] = val;\n        return acc;\n      }, {});\n\n      var portalProps = _pick(unhandled, portalPropNames); // wrap dimmer modals\n\n\n      var dimmerClasses = cx('ui', dimmer === 'inverted' && 'inverted', !centered && 'top aligned', 'page modals dimmer transition visible active'); // Heads up!\n      //\n      // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n      // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n      //\n      // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n      // We need the immediate child to be the dimmer to :not() blur the modal itself!\n      // Otherwise, the portal div is also blurred, blurring the modal.\n      //\n      // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n      return React.createElement(Portal, _extends({\n        closeOnDocumentClick: closeOnDocumentClick\n      }, portalProps, {\n        trigger: trigger,\n        eventPool: eventPool,\n        mountNode: mountNode,\n        open: open,\n        onClose: this.handleClose,\n        onMount: this.handlePortalMount,\n        onOpen: this.handleOpen,\n        onUnmount: this.handlePortalUnmount\n      }), React.createElement(\"div\", {\n        className: dimmerClasses,\n        ref: this.handleDimmerRef\n      }, this.renderContent(rest)));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\n_defineProperty(Modal, \"defaultProps\", {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n});\n\n_defineProperty(Modal, \"autoControlledProps\", ['open']);\n\n_defineProperty(Modal, \"Header\", ModalHeader);\n\n_defineProperty(Modal, \"Content\", ModalContent);\n\n_defineProperty(Modal, \"Description\", ModalDescription);\n\n_defineProperty(Modal, \"Actions\", ModalActions);\n\n_defineProperty(Modal, \"handledProps\", [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"]);\n\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOf([true, 'inverted', 'blurring']),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['fullscreen', 'large', 'mini', 'small', 'tiny']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Portal are passed-through\n   * to the wrapping Portal.\n   */\n\n} : {};\nexport default Modal;"]},"metadata":{},"sourceType":"module"}