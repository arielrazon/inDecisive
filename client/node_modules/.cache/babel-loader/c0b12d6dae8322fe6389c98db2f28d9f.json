{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes } from '../../lib';\nimport getNodeFromProps from './lib/getNodeFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode = /*#__PURE__*/function (_Component) {\n  _inherits(MountNode, _Component);\n\n  function MountNode() {\n    _classCallCheck(this, MountNode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MountNode).apply(this, arguments));\n  }\n\n  _createClass(MountNode, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var nextClassName = _ref.className;\n      var currentClassName = this.props.className;\n      return nextClassName !== currentClassName;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.add(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var node = getNodeFromProps(this.props);\n      if (node) nodeRegistry.emit(node, handleClassNamesChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.del(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return MountNode;\n}(Component);\n\n_defineProperty(MountNode, \"handledProps\", [\"className\", \"node\"]);\n\nexport { MountNode as default };\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: customPropTypes.domNode\n} : {};","map":{"version":3,"sources":["/Users/arielrazon/Desktop/big_coding_projects/in_decisive/client/node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","PropTypes","Component","customPropTypes","getNodeFromProps","handleClassNamesChange","NodeRegistry","nodeRegistry","MountNode","_Component","apply","arguments","key","value","shouldComponentUpdate","_ref","nextClassName","className","currentClassName","props","componentWillMount","node","add","emit","componentDidUpdate","componentWillUnmount","del","render","default","propTypes","process","env","NODE_ENV","string","domNode"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes } from '../../lib';\nimport getNodeFromProps from './lib/getNodeFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MountNode, _Component);\n\n  function MountNode() {\n    _classCallCheck(this, MountNode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MountNode).apply(this, arguments));\n  }\n\n  _createClass(MountNode, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var nextClassName = _ref.className;\n      var currentClassName = this.props.className;\n      return nextClassName !== currentClassName;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.add(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var node = getNodeFromProps(this.props);\n      if (node) nodeRegistry.emit(node, handleClassNamesChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var node = getNodeFromProps(this.props);\n\n      if (node) {\n        nodeRegistry.del(node, this);\n        nodeRegistry.emit(node, handleClassNamesChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return MountNode;\n}(Component);\n\n_defineProperty(MountNode, \"handledProps\", [\"className\", \"node\"]);\n\nexport { MountNode as default };\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: customPropTypes.domNode\n} : {};"]},"metadata":{},"sourceType":"module"}