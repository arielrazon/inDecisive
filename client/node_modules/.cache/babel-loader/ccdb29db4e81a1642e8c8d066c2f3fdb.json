{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleContainerClick\", function (e) {\n      var id = _this.props.id;\n      if (_isNil(id)) _this.handleClick(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInputClick\", function (e) {\n      var id = _this.props.id;\n      if (id) _this.handleClick(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInputRef\", function (c) {\n      return _this.inputRef = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.inputRef, 'focus');\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n      if (_this.inputRef) _this.inputRef.indeterminate = !!indeterminate;\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state3 = this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleContainerClick,\n        onChange: this.handleContainerClick,\n        onMouseDown: this.handleMouseDown\n      }), React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        onClick: this.handleInputClick,\n        readOnly: true,\n        ref: this.handleInputRef,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      })), createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      }));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};","map":{"version":3,"sources":["/Users/arielrazon/Desktop/big_coding_projects/in_decisive/client/node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"names":["_extends","_slicedToArray","_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_assertThisInitialized","_defineProperty","_invoke","_isNil","cx","PropTypes","React","AutoControlledComponent","Component","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","htmlInputAttrs","partitionHTMLProps","useKeyOnly","Checkbox","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_this$props","props","disabled","radio","readOnly","checked","state","_this$props2","tabIndex","e","id","handleClick","c","inputRef","_this$state","indeterminate","canToggle","trySetState","_this$state2","preventDefault","key","value","componentDidMount","setIndeterminate","componentDidUpdate","render","_this$props3","className","label","name","slider","toggle","type","_this$state3","classes","unhandled","ElementType","_partitionHTMLProps","htmlProps","_partitionHTMLProps2","htmlInputProps","rest","createElement","onClick","handleContainerClick","onChange","onMouseDown","handleMouseDown","handleInputClick","ref","handleInputRef","computeTabIndex","defaultProps","htmlFor","autoGenerateKey","default","propTypes","process","env","NODE_ENV","as","bool","string","defaultChecked","defaultIndeterminate","fitted","oneOfType","number","itemShorthand","func","every","disallow","oneOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,0BAAP,MAAuC,kDAAvC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAuB,IAAIC,SAApC,EAA+CC,eAA/C,EAAgEC,eAAhE,EAAiFC,cAAjF,EAAiGC,iBAAjG,EAAoHC,cAApH,EAAoIC,kBAApI,EAAwJC,UAAxJ,QAA0K,WAA1K;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GACZ,aACA,UAAUC,UAAV,EAAsB;AACpBlB,EAAAA,SAAS,CAACiB,QAAD,EAAWC,UAAX,CAAT;;AAEA,WAASD,QAAT,GAAoB;AAClB,QAAIE,gBAAJ;;AAEA,QAAIC,KAAJ;;AAEAxB,IAAAA,eAAe,CAAC,IAAD,EAAOqB,QAAP,CAAf;;AAEA,SAAK,IAAII,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAEDN,IAAAA,KAAK,GAAGtB,0BAA0B,CAAC,IAAD,EAAO,CAACqB,gBAAgB,GAAGpB,eAAe,CAACkB,QAAD,CAAnC,EAA+CU,IAA/C,CAAoDC,KAApD,CAA0DT,gBAA1D,EAA4E,CAAC,IAAD,EAAOU,MAAP,CAAcL,IAAd,CAA5E,CAAP,CAAlC;;AAEAtB,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,WAAxD,EAAqE,YAAY;AAC9F,UAAIU,WAAW,GAAGV,KAAK,CAACW,KAAxB;AAAA,UACIC,QAAQ,GAAGF,WAAW,CAACE,QAD3B;AAAA,UAEIC,KAAK,GAAGH,WAAW,CAACG,KAFxB;AAAA,UAGIC,QAAQ,GAAGJ,WAAW,CAACI,QAH3B;AAIA,UAAIC,OAAO,GAAGf,KAAK,CAACgB,KAAN,CAAYD,OAA1B;AACA,aAAO,CAACH,QAAD,IAAa,CAACE,QAAd,IAA0B,EAAED,KAAK,IAAIE,OAAX,CAAjC;AACD,KAPc,CAAf;;AASAjC,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,iBAAxD,EAA2E,YAAY;AACpG,UAAIiB,YAAY,GAAGjB,KAAK,CAACW,KAAzB;AAAA,UACIC,QAAQ,GAAGK,YAAY,CAACL,QAD5B;AAAA,UAEIM,QAAQ,GAAGD,YAAY,CAACC,QAF5B;AAGA,UAAI,CAAClC,MAAM,CAACkC,QAAD,CAAX,EAAuB,OAAOA,QAAP;AACvB,aAAON,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CAAvB;AACD,KANc,CAAf;;AAQA9B,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,sBAAxD,EAAgF,UAAUmB,CAAV,EAAa;AAC1G,UAAIC,EAAE,GAAGpB,KAAK,CAACW,KAAN,CAAYS,EAArB;AACA,UAAIpC,MAAM,CAACoC,EAAD,CAAV,EAAgBpB,KAAK,CAACqB,WAAN,CAAkBF,CAAlB;AACjB,KAHc,CAAf;;AAKArC,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,kBAAxD,EAA4E,UAAUmB,CAAV,EAAa;AACtG,UAAIC,EAAE,GAAGpB,KAAK,CAACW,KAAN,CAAYS,EAArB;AACA,UAAIA,EAAJ,EAAQpB,KAAK,CAACqB,WAAN,CAAkBF,CAAlB;AACT,KAHc,CAAf;;AAKArC,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,gBAAxD,EAA0E,UAAUsB,CAAV,EAAa;AACpG,aAAOtB,KAAK,CAACuB,QAAN,GAAiBD,CAAxB;AACD,KAFc,CAAf;;AAIAxC,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,aAAxD,EAAuE,UAAUmB,CAAV,EAAa;AACjG,UAAIK,WAAW,GAAGxB,KAAK,CAACgB,KAAxB;AAAA,UACID,OAAO,GAAGS,WAAW,CAACT,OAD1B;AAAA,UAEIU,aAAa,GAAGD,WAAW,CAACC,aAFhC;AAGA,UAAI,CAACzB,KAAK,CAAC0B,SAAN,EAAL,EAAwB;;AAExB3C,MAAAA,OAAO,CAACiB,KAAK,CAACW,KAAP,EAAc,SAAd,EAAyBQ,CAAzB,EAA4B5C,aAAa,CAAC,EAAD,EAAKyB,KAAK,CAACW,KAAX,EAAkB;AAChEI,QAAAA,OAAO,EAAE,CAACA,OADsD;AAEhEU,QAAAA,aAAa,EAAE,CAAC,CAACA;AAF+C,OAAlB,CAAzC,CAAP;;AAKA1C,MAAAA,OAAO,CAACiB,KAAK,CAACW,KAAP,EAAc,UAAd,EAA0BQ,CAA1B,EAA6B5C,aAAa,CAAC,EAAD,EAAKyB,KAAK,CAACW,KAAX,EAAkB;AACjEI,QAAAA,OAAO,EAAE,CAACA,OADuD;AAEjEU,QAAAA,aAAa,EAAE;AAFkD,OAAlB,CAA1C,CAAP;;AAKAzB,MAAAA,KAAK,CAAC2B,WAAN,CAAkB;AAChBZ,QAAAA,OAAO,EAAE,CAACA,OADM;AAEhBU,QAAAA,aAAa,EAAE;AAFC,OAAlB;AAID,KApBc,CAAf;;AAsBA3C,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,iBAAxD,EAA2E,UAAUmB,CAAV,EAAa;AACrG,UAAIS,YAAY,GAAG5B,KAAK,CAACgB,KAAzB;AAAA,UACID,OAAO,GAAGa,YAAY,CAACb,OAD3B;AAAA,UAEIU,aAAa,GAAGG,YAAY,CAACH,aAFjC;;AAIA1C,MAAAA,OAAO,CAACiB,KAAK,CAACW,KAAP,EAAc,aAAd,EAA6BQ,CAA7B,EAAgC5C,aAAa,CAAC,EAAD,EAAKyB,KAAK,CAACW,KAAX,EAAkB;AACpEI,QAAAA,OAAO,EAAE,CAAC,CAACA,OADyD;AAEpEU,QAAAA,aAAa,EAAE,CAAC,CAACA;AAFmD,OAAlB,CAA7C,CAAP;;AAKA1C,MAAAA,OAAO,CAACiB,KAAK,CAACuB,QAAP,EAAiB,OAAjB,CAAP;;AAEAJ,MAAAA,CAAC,CAACU,cAAF;AACD,KAbc,CAAf;;AAeA/C,IAAAA,eAAe,CAACD,sBAAsB,CAACA,sBAAsB,CAACmB,KAAD,CAAvB,CAAvB,EAAwD,kBAAxD,EAA4E,YAAY;AACrG,UAAIyB,aAAa,GAAGzB,KAAK,CAACgB,KAAN,CAAYS,aAAhC;AACA,UAAIzB,KAAK,CAACuB,QAAV,EAAoBvB,KAAK,CAACuB,QAAN,CAAeE,aAAf,GAA+B,CAAC,CAACA,aAAjC;AACrB,KAHc,CAAf;;AAKA,WAAOzB,KAAP;AACD;;AAEDvB,EAAAA,YAAY,CAACoB,QAAD,EAAW,CAAC;AACtBiC,IAAAA,GAAG,EAAE,mBADiB;AAEtBC,IAAAA,KAAK,EAAE,SAASC,iBAAT,GAA6B;AAClC,WAAKC,gBAAL;AACD;AAJqB,GAAD,EAKpB;AACDH,IAAAA,GAAG,EAAE,oBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASG,kBAAT,GAA8B;AACnC,WAAKD,gBAAL;AACD;AAJA,GALoB,EAUpB;AACDH,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASI,MAAT,GAAkB;AACvB,UAAIC,YAAY,GAAG,KAAKzB,KAAxB;AAAA,UACI0B,SAAS,GAAGD,YAAY,CAACC,SAD7B;AAAA,UAEIzB,QAAQ,GAAGwB,YAAY,CAACxB,QAF5B;AAAA,UAGI0B,KAAK,GAAGF,YAAY,CAACE,KAHzB;AAAA,UAIIlB,EAAE,GAAGgB,YAAY,CAAChB,EAJtB;AAAA,UAKImB,IAAI,GAAGH,YAAY,CAACG,IALxB;AAAA,UAMI1B,KAAK,GAAGuB,YAAY,CAACvB,KANzB;AAAA,UAOIC,QAAQ,GAAGsB,YAAY,CAACtB,QAP5B;AAAA,UAQI0B,MAAM,GAAGJ,YAAY,CAACI,MAR1B;AAAA,UASIC,MAAM,GAAGL,YAAY,CAACK,MAT1B;AAAA,UAUIC,IAAI,GAAGN,YAAY,CAACM,IAVxB;AAAA,UAWIX,KAAK,GAAGK,YAAY,CAACL,KAXzB;AAYA,UAAIY,YAAY,GAAG,KAAK3B,KAAxB;AAAA,UACID,OAAO,GAAG4B,YAAY,CAAC5B,OAD3B;AAAA,UAEIU,aAAa,GAAGkB,YAAY,CAAClB,aAFjC;AAGA,UAAImB,OAAO,GAAG3D,EAAE,CAAC,IAAD,EAAOW,UAAU,CAACmB,OAAD,EAAU,SAAV,CAAjB,EAAuCnB,UAAU,CAACgB,QAAD,EAAW,UAAX,CAAjD,EAAyEhB,UAAU,CAAC6B,aAAD,EAAgB,eAAhB,CAAnF,EAAqH;AACrI;AACA7B,MAAAA,UAAU,CAACZ,MAAM,CAACsD,KAAD,CAAP,EAAgB,QAAhB,CAFM,EAEqB1C,UAAU,CAACiB,KAAD,EAAQ,OAAR,CAF/B,EAEiDjB,UAAU,CAACkB,QAAD,EAAW,WAAX,CAF3D,EAEoFlB,UAAU,CAAC4C,MAAD,EAAS,QAAT,CAF9F,EAEkH5C,UAAU,CAAC6C,MAAD,EAAS,QAAT,CAF5H,EAEgJ,UAFhJ,EAE4JJ,SAF5J,CAAhB;AAGA,UAAIQ,SAAS,GAAGpD,iBAAiB,CAACI,QAAD,EAAW,KAAKc,KAAhB,CAAjC;AACA,UAAImC,WAAW,GAAGtD,cAAc,CAACK,QAAD,EAAW,KAAKc,KAAhB,CAAhC;;AAEA,UAAIoC,mBAAmB,GAAGpD,kBAAkB,CAACkD,SAAD,EAAY;AACtDG,QAAAA,SAAS,EAAEtD;AAD2C,OAAZ,CAA5C;AAAA,UAGIuD,oBAAoB,GAAG3E,cAAc,CAACyE,mBAAD,EAAsB,CAAtB,CAHzC;AAAA,UAIIG,cAAc,GAAGD,oBAAoB,CAAC,CAAD,CAJzC;AAAA,UAKIE,IAAI,GAAGF,oBAAoB,CAAC,CAAD,CAL/B;;AAOA,aAAO9D,KAAK,CAACiE,aAAN,CAAoBN,WAApB,EAAiCzE,QAAQ,CAAC,EAAD,EAAK8E,IAAL,EAAW;AACzDd,QAAAA,SAAS,EAAEO,OAD8C;AAEzDS,QAAAA,OAAO,EAAE,KAAKC,oBAF2C;AAGzDC,QAAAA,QAAQ,EAAE,KAAKD,oBAH0C;AAIzDE,QAAAA,WAAW,EAAE,KAAKC;AAJuC,OAAX,CAAzC,EAKHtE,KAAK,CAACiE,aAAN,CAAoB,OAApB,EAA6B/E,QAAQ,CAAC,EAAD,EAAK6E,cAAL,EAAqB;AAC5DnC,QAAAA,OAAO,EAAEA,OADmD;AAE5DsB,QAAAA,SAAS,EAAE,QAFiD;AAG5DzB,QAAAA,QAAQ,EAAEA,QAHkD;AAI5DQ,QAAAA,EAAE,EAAEA,EAJwD;AAK5DmB,QAAAA,IAAI,EAAEA,IALsD;AAM5Dc,QAAAA,OAAO,EAAE,KAAKK,gBAN8C;AAO5D5C,QAAAA,QAAQ,EAAE,IAPkD;AAQ5D6C,QAAAA,GAAG,EAAE,KAAKC,cARkD;AAS5D1C,QAAAA,QAAQ,EAAE,KAAK2C,eAAL,EATkD;AAU5DnB,QAAAA,IAAI,EAAEA,IAVsD;AAW5DX,QAAAA,KAAK,EAAEA;AAXqD,OAArB,CAArC,CALG,EAiBFzC,eAAe,CAACgD,KAAD,EAAQ;AAC1BwB,QAAAA,YAAY,EAAE;AACZC,UAAAA,OAAO,EAAE3C;AADG,SADY;AAI1B4C,QAAAA,eAAe,EAAE;AAJS,OAAR,CAAf,IAKC7E,KAAK,CAACiE,aAAN,CAAoB,OAApB,EAA6B;AACjCW,QAAAA,OAAO,EAAE3C;AADwB,OAA7B,CAtBC,CAAP;AAyBD;AAxDA,GAVoB,CAAX,CAAZ;;AAqEA,SAAOvB,QAAP;AACD,CAlKD,CAkKER,SAlKF,CAFA;;AAsKAP,eAAe,CAACe,QAAD,EAAW,cAAX,EAA2B;AACxC6C,EAAAA,IAAI,EAAE;AADkC,CAA3B,CAAf;;AAIA5D,eAAe,CAACe,QAAD,EAAW,qBAAX,EAAkC,CAAC,SAAD,EAAY,eAAZ,CAAlC,CAAf;;AAEAf,eAAe,CAACe,QAAD,EAAW,cAAX,EAA2B,CAAC,IAAD,EAAO,SAAP,EAAkB,WAAlB,EAA+B,gBAA/B,EAAiD,sBAAjD,EAAyE,UAAzE,EAAqF,QAArF,EAA+F,IAA/F,EAAqG,eAArG,EAAsH,OAAtH,EAA+H,MAA/H,EAAuI,UAAvI,EAAmJ,SAAnJ,EAA8J,aAA9J,EAA6K,OAA7K,EAAsL,UAAtL,EAAkM,QAAlM,EAA4M,UAA5M,EAAwN,QAAxN,EAAkO,MAAlO,EAA0O,OAA1O,CAA3B,CAAf;;AAEA,SAASA,QAAQ,IAAIoE,OAArB;AACApE,QAAQ,CAACqE,SAAT,GAAqBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3D;AACAC,EAAAA,EAAE,EAAE/E,eAAe,CAAC+E,EAFuC;;AAI3D;AACAvD,EAAAA,OAAO,EAAE7B,SAAS,CAACqF,IALwC;;AAO3D;AACAlC,EAAAA,SAAS,EAAEnD,SAAS,CAACsF,MARsC;;AAU3D;AACAC,EAAAA,cAAc,EAAEvF,SAAS,CAACqF,IAXiC;;AAa3D;AACAG,EAAAA,oBAAoB,EAAExF,SAAS,CAACqF,IAd2B;;AAgB3D;AACA3D,EAAAA,QAAQ,EAAE1B,SAAS,CAACqF,IAjBuC;;AAmB3D;AACAI,EAAAA,MAAM,EAAEzF,SAAS,CAACqF,IApByC;;AAsB3D;AACAnD,EAAAA,EAAE,EAAElC,SAAS,CAAC0F,SAAV,CAAoB,CAAC1F,SAAS,CAAC2F,MAAX,EAAmB3F,SAAS,CAACsF,MAA7B,CAApB,CAvBuD;;AAyB3D;AACA/C,EAAAA,aAAa,EAAEvC,SAAS,CAACqF,IA1BkC;;AA4B3D;AACAjC,EAAAA,KAAK,EAAE/C,eAAe,CAACuF,aA7BoC;;AA+B3D;AACAvC,EAAAA,IAAI,EAAErD,SAAS,CAACsF,MAhC2C;;AAkC3D;AACF;AACA;AACA;AACA;AACA;AACEjB,EAAAA,QAAQ,EAAErE,SAAS,CAAC6F,IAxCuC;;AA0C3D;AACF;AACA;AACA;AACA;AACA;AACE1B,EAAAA,OAAO,EAAEnE,SAAS,CAAC6F,IAhDwC;;AAkD3D;AACF;AACA;AACA;AACA;AACA;AACEvB,EAAAA,WAAW,EAAEtE,SAAS,CAAC6F,IAxDoC;;AA0D3D;AACAlE,EAAAA,KAAK,EAAEtB,eAAe,CAACyF,KAAhB,CAAsB,CAAC9F,SAAS,CAACqF,IAAX,EAAiBhF,eAAe,CAAC0F,QAAhB,CAAyB,CAAC,QAAD,EAAW,QAAX,CAAzB,CAAjB,CAAtB,CA3DoD;;AA6D3D;AACAnE,EAAAA,QAAQ,EAAE5B,SAAS,CAACqF,IA9DuC;;AAgE3D;AACA/B,EAAAA,MAAM,EAAEjD,eAAe,CAACyF,KAAhB,CAAsB,CAAC9F,SAAS,CAACqF,IAAX,EAAiBhF,eAAe,CAAC0F,QAAhB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,CAAjB,CAAtB,CAjEmD;;AAmE3D;AACA/D,EAAAA,QAAQ,EAAEhC,SAAS,CAAC0F,SAAV,CAAoB,CAAC1F,SAAS,CAAC2F,MAAX,EAAmB3F,SAAS,CAACsF,MAA7B,CAApB,CApEiD;;AAsE3D;AACA/B,EAAAA,MAAM,EAAElD,eAAe,CAACyF,KAAhB,CAAsB,CAAC9F,SAAS,CAACqF,IAAX,EAAiBhF,eAAe,CAAC0F,QAAhB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,CAAjB,CAAtB,CAvEmD;;AAyE3D;AACAvC,EAAAA,IAAI,EAAExD,SAAS,CAACgG,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,CA1EqD;;AA4E3D;AACAnD,EAAAA,KAAK,EAAE7C,SAAS,CAAC0F,SAAV,CAAoB,CAAC1F,SAAS,CAACsF,MAAX,EAAmBtF,SAAS,CAAC2F,MAA7B,CAApB;AA7EoD,CAAxC,GA8EjB,EA9EJ","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleContainerClick\", function (e) {\n      var id = _this.props.id;\n      if (_isNil(id)) _this.handleClick(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInputClick\", function (e) {\n      var id = _this.props.id;\n      if (id) _this.handleClick(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInputRef\", function (c) {\n      return _this.inputRef = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.inputRef, 'focus');\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n      if (_this.inputRef) _this.inputRef.indeterminate = !!indeterminate;\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state3 = this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleContainerClick,\n        onChange: this.handleContainerClick,\n        onMouseDown: this.handleMouseDown\n      }), React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        onClick: this.handleInputClick,\n        readOnly: true,\n        ref: this.handleInputRef,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      })), createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      }));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};"]},"metadata":{},"sourceType":"module"}